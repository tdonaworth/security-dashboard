{"swagger":"2.0","info":{"version":"0.0.3","title":"iQIES Auth Service","description":"This is the authentication microservice for CMS iQIES. It provides a login endpoint for users to submit username and password credentials in order to obtain a JWT token for use in consecutive calls to other API endpoints in the microservice ecosystem."},"x-service":"auth","host":"auth.service.consul:32768","basePath":"","schemes":["http"],"securityDefinitions":{"Bearer":{"type":"apiKey","name":"Authorization","in":"header"}},"consumes":["application/json"],"produces":["application/json"],"paths":{"/v1/work-units":{"parameters":[],"get":{"description":"Obtains the list of all Work Units","operationId":"get work units","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RefDataResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}},"tags":["User Units"]}},"/v1/users/request":{"parameters":[],"post":{"summary":"Submit user access request","description":"Submit user access request.","operationId":"createRequest","security":[{"Bearer":[]}],"tags":["user"],"parameters":[{"name":"body","in":"body","schema":{"$ref":"#/definitions/AccessRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/AccessRequestResponses"}},"400":{"description":"Invalid request to Saviyant","schema":{"$ref":"#/definitions/ErrorResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/provision":{"parameters":[],"post":{"tags":["Templates","User Management","User"],"summary":"Associates a user with a role","operationId":"userRoleAssociation","security":[{"Bearer":[]}],"description":"Associates a user with given role(s). This is used by Saviynt to provision a user-role association back to iQIES","parameters":[{"name":"body","in":"body","required":true,"description":"Role association body","schema":{"$ref":"#/definitions/ProvisionRoleRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/me/federalSurveyor":{"parameters":[],"get":{"description":"this end point returns legacy user info","summary":"legacy user info","parameters":[{"name":"federalSurveyorId","in":"query","description":"Get federal Surveyor id","type":"string","default":0}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}},"404":{"description":"No user found","schema":{"$ref":"#/definitions/ErrorResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/me/csrf":{"parameters":[],"get":{"description":"Get a CSRF token for use by browser applications in the system.","summary":"CSRF protection mechanism","parameters":[],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/me":{"parameters":[],"get":{"summary":"Get logged in user details","description":"Get user details of currently logged in user.","operationId":"getMe","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}},"put":{"summary":"Submit update user access request","description":"Submit update user access request.","tags":["user"],"operationId":"updateMe","security":[{"Bearer":[]}],"parameters":[{"name":"body","in":"body","schema":{"$ref":"#/definitions/EditUserAccessRequest"}}],"responses":{"201":{"description":"Success","schema":{"$ref":"#/definitions/EditUserAccessResponse"}},"404":{"description":"No user found.","schema":{"$ref":"#/definitions/ErrorResponse"}},"422":{"description":"Can not process request.","schema":{"$ref":"#/definitions/ErrorResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/emails":{"parameters":[],"get":{"summary":"Gets e-mail addresses for all users with a specific role and orgRefId","description":"Gets emails for all users based on role name and orgRefId","tags":["api-key-management"],"parameters":[{"name":"orgRefId","in":"query","required":true,"description":"orgRefId to be used in query","type":"string"},{"name":"roleName","in":"query","required":true,"description":"user role name to be used in query","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/users/current":{"parameters":[],"get":{"summary":"Authorization endpoint.","description":"Authorization endpoint to retrieve a given user's information via the user's JWT.","operationId":"authorize","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/users":{"parameters":[],"get":{"description":"Obtains the list of users by input criteria.","operationId":"get users by criteria","security":[{"Bearer":[]}],"parameters":[{"name":"roleId","in":"query","description":"field to filter users by role.","type":"array","items":{"type":"integer"}},{"name":"offset","in":"query","description":"Starting point for results","type":"integer","default":0},{"name":"limit","in":"query","description":"Results per Page","type":"integer","default":10},{"name":"sortDir","in":"query","description":"direction to order results","type":"string","enum":["asc","desc"],"default":"asc"},{"name":"sortBy","in":"query","description":"field to order results by","type":"string","enum":["userName","firstName","lastName","id","workUnit","managementUnit"],"default":"id"},{"name":"primaryDisciplineId","in":"query","description":"field to filter users by primaryDisciplineId.","type":"integer"},{"name":"userId","in":"query","description":"field to filter users by UserId.","type":"integer"},{"name":"username","in":"query","description":"field to filter users by user name.","type":"string"},{"name":"firstName","in":"query","description":"field to filter user's first name","type":"string"},{"name":"lastName","in":"query","description":"field to filter users last name.","type":"string"},{"name":"userIds","in":"query","description":"Multiple User's  IDs - will not work if 'userId' is set.","type":"array","items":{"type":"integer"}},{"name":"workUnitId","in":"query","description":"field to filter users by workunitId.","type":"integer"},{"name":"managementUnitId","in":"query","description":"field to filter users by managementUnitId.","type":"integer"},{"name":"stateIds","in":"query","description":"field to filter users by stateId.","type":"array","items":{"type":"integer"}},{"name":"regionIds","in":"query","description":"field to filter users by region Id.","type":"array","items":{"type":"integer"}},{"name":"disciplineIds","in":"query","description":"Multiple discipline IDs","type":"array","items":{"type":"integer"}},{"name":"roleAndOrgsFilters","in":"query","description":"Role And Orgs Filters","type":"array","items":{"type":"string"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/User"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["Templates"]},"post":{"description":"Add a user.","operationId":"adds a user","security":[{"Bearer":[]}],"parameters":[{"name":"body","in":"body","required":true,"description":"Add user body","schema":{"$ref":"#/definitions/CreateUserRequest"}}],"responses":{"201":{"description":"Success","schema":{"$ref":"#/definitions/CreateUserResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}},"409":{"description":"Conflict","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/so":{"parameters":[],"get":{"summary":"Checks if an organization has an approver defined for a role being requested","description":"Checks if an organization has an approver defined for a role being requested","operationId":"hasSO","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"roleId","in":"query","required":true,"description":"The role id","type":"integer"},{"name":"orgRefId","in":"query","required":false,"description":"The optional organization reference id","type":"string"}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]}},"/v1/sav-rotate":{"parameters":[],"post":{"summary":"Rotates the access and refresh token for saviynt as needed.","description":"Allows the access and refresh token for saviynt to be update","operationId":"sav-rotate","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"The token type to be rotated. Can be `create`, `refresh` or `self_service`","schema":{"$ref":"#/definitions/SaviyntTokenRotateRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/SaviyntTokenRotateResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt","rotate"]}},"/v1/roles":{"parameters":[],"get":{"description":"Obtains the list of roles.","operationId":"get roles","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RefDataResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}},"tags":["Templates"]}},"/v1/refresh":{"parameters":[],"post":{"summary":"Refresh session endpoint.","description":"Allows a user extend their current session","operationId":"refresh","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Refresh session body","schema":{"$ref":"#/definitions/RefreshSessionRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RefreshSessionResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["public","user","refresh","session"]}},"/v1/public/svcaccount/login":{"parameters":[],"post":{"summary":"Authentication endpoint for service account.","description":"This is the main authentication endpoint that the front-end of iQIES talks to in order to authenticate a user.","operationId":"login","consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Login Body","schema":{"$ref":"#/definitions/AuthenticationRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/User"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["public","user"]}},"/v1/public/ping-db":{"parameters":[],"get":{"summary":"Health: Database ping endpoint.","description":"This endpoint checks the status of the microservice's PostgreSQL database.","operationId":"pingDb","responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/public/ping":{"parameters":[],"get":{"summary":"Health: Ping endpoint.","description":"This endpoint checks the status of the microservice.","operationId":"ping","responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/public/login":{"parameters":[],"post":{"summary":"Authentication endpoint.","description":"This is the main authentication endpoint that the front-end of iQIES talks to in order to authenticate a user.","operationId":"login","consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Login Body","schema":{"$ref":"#/definitions/AuthenticationRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/User"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["public","user"]}},"/v1/primary-disciplines":{"parameters":[],"get":{"description":"Obtains the list of primary disciplines.","operationId":"get primary disciplines","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RefDataResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}},"tags":["Templates"]}},"/v1/ping":{"parameters":[],"get":{"summary":"Health: Ping endpoint.","description":"This endpoint checks the status of the microservice.","operationId":"ping","responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/organizations":{"parameters":[],"post":{"summary":"Creates an organization & supporting entitlements in Saviynt","description":"Creates an organization & supporting entitlements in Saviynt","operationId":"createEntitlement","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Entitlement create body","schema":{"$ref":"#/definitions/OrgEntitlementsRequest"}}],"responses":{"201":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]},"put":{"summary":"Updates entitlements in Saviynt for an organization","description":"Updates entitlements in Saviynt for an organization","operationId":"updateEntitlements","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Entitlement update body","schema":{"$ref":"#/definitions/OrgEntitlementsRequest"}}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]}},"/v1/management-units":{"parameters":[],"get":{"description":"Obtains the list of all Management Units","operationId":"get management units","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RefDataResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}},"tags":["User Units"]}},"/v1/logout":{"parameters":[],"post":{"summary":"Logout endpoint.","description":"Provides logout functionality","operationId":"logout","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Refresh session body","schema":{"$ref":"#/definitions/RefreshSessionRequest"}}],"responses":{"200":{"description":"Success"},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["public","user","logout","session"]}},"/v1/entitlements":{"parameters":[],"post":{"summary":"Creates an entitlement in Saviynt","description":"Creates an entitlement in Saviynt","operationId":"createEntitlement","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Entitlement create body","schema":{"$ref":"#/definitions/EntitlementRequest"}}],"responses":{"201":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]},"put":{"summary":"Updates an entitlement in Saviynt","description":"Updates an entitlement in Saviynt","operationId":"updateEntitlement","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"description":"Entitlement update body","schema":{"$ref":"#/definitions/EntitlementRequest"}}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]},"get":{"summary":"Get entitlements defined in Saviynt for this organization","description":"Get entitlements defined in Saviynt for this organization","operationId":"getEntitlements","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"orgName","in":"query","required":true,"description":"The role name","type":"string"},{"name":"orgRefId","in":"query","required":false,"description":"The optional organization reference id","type":"string"}],"responses":{"200":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"404":{"description":"Not Found","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["saviynt"]}},"/v1/categories":{"parameters":[],"get":{"description":"Obtains the list of categories.","operationId":"get categories","security":[{"Bearer":[]}],"responses":{"200":{"description":"Success","schema":{"type":"array","items":{"$ref":"#/definitions/Category"}}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}},"tags":["Templates"]}},"/v1/users/me/organizations/{organizationId}/apiKey":{"parameters":[],"get":{"tags":["state-api-key-management"],"summary":"Obtains the api key information by state","security":[{"Bearer":[]}],"description":"Obtains the API key management information given that a user has permission to view key information for that state","parameters":[{"name":"organizationId","in":"path","required":true,"description":"Organization id","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/StateApiAccessResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/BasicResponse"}},"404":{"description":"No API key information found for the requested state","schema":{"$ref":"#/definitions/BasicResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}},"post":{"tags":["state-api-key-management"],"summary":"Generates a new API key and saves corresponding information","security":[{"Bearer":[]}],"description":"Creates a new API key and saves corresponding information.","parameters":[{"name":"organizationId","in":"path","required":true,"description":"Organization id","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/CreateStateApiAccessResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}}}},"put":{"tags":["state-api-key-management"],"summary":"Updates description for existing state record or creates a new record if it does not previously exist.","security":[{"Bearer":[]}],"description":"Updates the description field for the existing record if it exists or creates a new one with the description if not.","parameters":[{"name":"organizationId","in":"path","required":true,"description":"Organization id","type":"string"},{"name":"body","in":"body","required":true,"description":"put API key description body","schema":{"$ref":"#/definitions/CreateStateApiAccessRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/CreateStateApiAccessResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/me/organizations/{organizationId}":{"parameters":[],"put":{"description":"this end point updates user units","summary":"updating user units","responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}},"400":{"description":"Validation Error","schema":{"$ref":"#/definitions/ErrorResponse"}},"404":{"description":"No role found","schema":{"$ref":"#/definitions/ErrorResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/{userId}/roles_remove":{"parameters":[],"post":{"summary":"Dissociate a user from a role","operationId":"userRoleDissociation","description":"Dissociates a user from given role(s)","parameters":[{"name":"userId","in":"path","required":true,"description":"User's ID or username.","type":"string"},{"name":"body","in":"body","required":true,"description":"Role dissociation body","schema":{"$ref":"#/definitions/UserRoleRequest"}}],"responses":{"204":{"description":"Success"},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/{userId}/roles":{"parameters":[],"get":{"summary":"Obtains the roles for a given user ID.","operationId":"roles","security":[{"Bearer":[]}],"description":"Obtains a user's roles given that the supplied ID in the path is their own ID alongside of the given JWT and header information passed via Kong.","parameters":[{"name":"userId","in":"path","required":true,"description":"User's ID or username.","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/User"}}},"tags":["Templates","User Management","User"]},"post":{"tags":["Templates","User Management","User"],"summary":"Associates a user with a role","operationId":"userRoleAssociation","security":[{"Bearer":[]}],"description":"Associates a user with given role(s)","parameters":[{"name":"userId","in":"path","required":true,"description":"User's ID.","type":"string"},{"name":"body","in":"body","required":true,"description":"Role association body","schema":{"$ref":"#/definitions/UserRoleRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/users/{userId}/providers":{"parameters":[],"get":{"summary":"Obtains the provider IDs for a given user ID or username.","operationId":"providers","description":"Obtains a user's associated providers given that the supplied ID in the path is their own ID alongside of the given JWT and header information passed via Kong.","parameters":[{"name":"userId","in":"path","required":true,"description":"User's ID or username.","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/GetUserProviderResponse"}},"403":{"description":"User not authenticated.","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/users/{userId}":{"parameters":[],"get":{"summary":"Get user by ID or username","description":"Get user details of the given iqies user id or username.","operationId":"getUser","security":[{"Bearer":[]}],"parameters":[{"name":"userId","in":"path","required":true,"description":"User's ID or username.","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/BasicResponse"}}}}},"/v1/public/factors/{factorId}/challenge/verify":{"parameters":[],"post":{"summary":"Verify MFA challenge","description":"Verify MFA Challenge","tags":["mfa"],"parameters":[{"name":"factorId","in":"path","description":"ID of MFA factor","required":true,"type":"string"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/FactorVerificationRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/AuthenticationResponse"}},"401":{"description":"Unathorized","schema":{"$ref":"#/definitions/ErrorResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/public/factors/{factorId}/challenge/send":{"parameters":[],"post":{"summary":"Send MFA challenge","description":"Send MFA Challenge","tags":["mfa"],"parameters":[{"name":"factorId","in":"path","description":"ID of MFA factor","required":true,"type":"string"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/FactorVerificationRequest"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/AuthenticationResponse"}},"401":{"description":"Unathorized","schema":{"$ref":"#/definitions/ErrorResponse"}},"default":{"description":"Unexpected error","schema":{"$ref":"#/definitions/ErrorResponse"}}}}},"/v1/providers/{providerId}/entitlement":{"parameters":[],"get":{"summary":"Check provider endpoint.","description":"Allows to check if a provider has entitlements created in Saviynt and if there are any corresponding approvers for submitted role requests.","operationId":"checkProvider","security":[{"Bearer":[]}],"consumes":["application/json"],"parameters":[{"name":"providerId","in":"path","required":true,"description":"The provider id","type":"integer"},{"name":"role","in":"query","required":true,"description":"The role name","type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/CheckProviderResponse"}},"401":{"description":"Unauthorized","schema":{"$ref":"#/definitions/BasicResponse"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/BasicResponse"}}},"tags":["provider","saviynt"]}}},"definitions":{"Factor":{"required":["id","factorType","factorDescription","status"],"properties":{"id":{"type":"string"},"factorType":{"type":"string","enum":["sms","token","call","token:software:totp","push","token:hardware","question","web"]},"factorDescription":{"type":"string","description":"The masked SMS phone number for a sms factor, question in the case of a question MFA, etc"},"status":{"type":"string","enum":["NOT_SETUP","PENDING_ACTIVATION","ENROLLED","ACTIVE","INACTIVE","EXPIRED"]}}},"AuthenticationResponse":{"required":["status"],"properties":{"stateToken":{"type":"string"},"sessionId":{"type":"string"},"kongToken":{"type":"string"},"expiresAt":{"type":"string"},"status":{"type":"string","enum":["UNAUTHENTICATED","PASSWORD_WARN","PASSWORD_EXPIRED","RECOVERY","RECOVERY_CHALLENGE","PASSWORD_RESET","LOCKED_OUT","MFA_ENROLL","MFA_ENROLL_ACTIVATE","MFA_REQUIRED","MFA_CHALLENGE","SUCCESS"]},"user":{"type":"object","$ref":"#/definitions/User"},"factors":{"type":"array","items":{"$ref":"#/definitions/Factor"}}}},"FactorVerificationRequest":{"required":["stateToken"],"properties":{"stateToken":{"type":"string"},"passCode":{"type":"string","description":"Code in response to a sms or token factor challenge"},"answer":{"type":"string","description":"Answer in response to a question factor challenge"}}},"AuthenticationRequest":{"required":["username","password"],"properties":{"username":{"type":"string","pattern":"^[a-zA-Z0-9%!,$^@#&_?=.*'-]*$","maxLength":100},"password":{"type":"string"}}},"BasicResponse":{"required":["message"],"properties":{"message":{"type":"string"}}},"User":{"required":["id","username"],"properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"passwordChanged":{"type":"string"},"passwordExpiring":{"type":"boolean"},"passwordExpireDaysPolicy":{"type":"integer"}}},"ErrorResponse":{"required":["message"],"properties":{"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"organizationType":{"type":"string"},"roles":{"type":"array","items":{"type":"integer"}}}},"RefData":{"type":"object","properties":{"id":{"type":"integer"},"code":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}}},"RefDataResponse":{"type":"array","items":{"$ref":"#/definitions/RefData"}},"AccessRequest":{"type":"object","required":["roleId","categoryId"],"properties":{"roleId":{"type":"integer"},"categoryId":{"type":"integer"},"organizations":{"type":"array","items":{"type":"integer"}},"qiesId":{"type":"string","pattern":"^(l|L)(t|T)(c|C)(h|H)\\d{7}$"}}},"EditUserAccessRequest":{"type":"object","required":["qiesId"],"properties":{"qiesId":{"type":["string","null"],"pattern":"^(l|L)(t|T)(c|C)(h|H)\\d{7}$"}}},"CreateUserRequest":{"type":"object","required":["username","firstName","lastName","email","phoneNumber"],"properties":{"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"phoneNumber":{"type":"string"}}},"UserRoleRequest":{"type":"object","required":["roles","providers"],"properties":{"roles":{"type":"array","items":{"type":"string"}},"providers":{"type":"array","items":{"type":"integer"}}}},"ProvisionRoleRequest":{"type":"object","required":["userId","roles","providers"],"properties":{"userId":{"type":"string"},"roles":{"type":"array","items":{"type":"string"}},"providers":{"type":"array","items":{"type":"integer"}}}},"RefreshSessionRequest":{"type":"object","required":["sessionId"],"properties":{"sessionId":{"type":"string"}}},"SaviyntTokenRotateRequest":{"type":"object","required":["type"],"properties":{"type":{"type":"string"}}},"EntitlementRequest":{"type":"object","required":["orgName","roleName"],"properties":{"orgName":{"type":"string"},"roleName":{"type":"string"},"providerId":{"type":"integer"}}},"OrgEntitlementsRequest":{"type":"object","required":["orgName","orgType"],"properties":{"orgName":{"type":"string"},"orgType":{"type":"string","enum":["Accrediting Organization","CMS Central Office","CMS Contractor","CMS Regional Office","Provider","State Agency","Vendor"]},"orgRefId":{"type":"integer"}}},"AccessRequestResponses":{"type":"array","items":{"$ref":"#/definitions/AccessRequestResponse"}},"EditUserAccessResponse":{"type":"object","properties":{"userName":{"type":"string"},"roleId":{"type":"integer"},"removedProviders":{"type":"array","items":{"$ref":"#/definitions/AccessRequestResponse"}},"addedProviders":{"type":"array","items":{"$ref":"#/definitions/AccessRequestResponse"}}}},"AccessRequestResponse":{"type":"object","properties":{"id":{"type":"integer"},"userId":{"type":"integer"},"roleId":{"type":"integer"},"requestStatusId":{"type":"integer"},"providerId":{"type":"integer"},"requestTypeId":{"type":"integer"},"saviyantId":{"type":"string"}}},"CreateUserResponse":{"type":"object","properties":{"id":{"type":"integer"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"phoneNumber":{"type":"string"}}},"GetUserProviderResponse":{"type":"object","properties":{"providers":{"type":"array","items":{"type":"integer"}}}},"StateApiAccess":{"type":"object","properties":{"id":{"type":"integer"},"consumerId":{"type":"string"},"kongKeyId":{"type":"string"},"expirationDateTime":{"type":"string","format":"date-time"},"stateId":{"type":"integer"},"description":{"type":"string"},"createdBy":{"type":"integer"},"createdByName":{"type":"string"},"createdDateTime":{"type":"string","format":"date-time"}}},"CreateStateApiAccessRequest":{"type":"object","properties":{"description":{"type":"string"}}},"CreateStateApiAccessResponse":{"type":"object","properties":{"apiKey":{"type":"string"},"description":{"type":"string"}}},"StateApiAccessResponse":{"type":"array","items":{"$ref":"#/definitions/StateApiAccess"}},"RefreshSessionResponse":{"type":"object","properties":{"kongToken":{"type":"string"}}},"SaviyntTokenRotateResponse":{"type":"object","properties":{"accessToken":{"type":"string"}}},"CheckProviderResponse":{"type":"object","properties":{"orgExists":{"type":"boolean"},"hasPSO":{"type":"boolean"}}}},"tags":[{"name":"User Units"},{"name":"user"},{"name":"Templates"},{"name":"User Management"},{"name":"User"},{"name":"api-key-management"},{"name":"saviynt"},{"name":"rotate"},{"name":"public"},{"name":"refresh"},{"name":"session"},{"name":"logout"},{"name":"state-api-key-management"},{"name":"mfa"},{"name":"provider"}]}
